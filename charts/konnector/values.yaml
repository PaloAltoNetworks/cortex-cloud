# ==========================
# ### Customer Defined Values ###
# ==========================
# All values below are defined by the customer for a specific installation.
# These values must be customized according to the installation environment.
#
# Please ensure to set the appropriate values for your specific use case.
#
# System section below should **NOT** be changed, as it contains internal settings for the system.
# These settings are predefined and should not be modified by the customer.

image:
  repository: "default-repository"  # Repository where the image is stored
  name: "default-image"             # Name of the image to be used
  tag: "default-tag"                # Tag for the image
  digest: ""                        # Image digest (optional)

namespace:
  name: pan  # Kubernetes namespace where resources will be deployed

dockerPullSecret: ""  # Secret for pulling images from a private registry

distribution:
  id: "default-distribution-id"  # Retrieve distribution ID from Palo Alto Networks systems during installation
  url: "https://distributions.traps.paloaltonetworks.com"  # Retrieve distribution URL from Palo Alto Networks systems during installation

optionalValues:
  CLUSTER_URI: ""    # Cluster URI should be set when metadata service is not reachable from the cluster
  UPLOAD_LOG_LEVEL: "ERROR"  # Log level for uploading logs ("ERROR", "WARNING", "INFO", "DEBUG", "PANIC")
  CONSOLE_LOG_LEVEL: "INFO"  # Log level for console output ("ERROR", "WARNING", "INFO", "DEBUG", "PANIC")

proxyValues:
  httpProxy: ""  # Optional proxy URL for external network access
  noProxy: "kubernetes,kubernetes.default.svc,.svc,.cluster.local"  # List of addresses/domains that should bypass the proxy

deleteJob:  # These values correspond to a Job used for deleting resources
  image:
    repository: "docker.io" # Repository where the image of is stored
    name: "alpine/helm"     # Name of the image to be used
    tag: "3.17.2"           # Tag for the image
    digest: ""              # Image digest (optional)
  reusePullSecret: false    # Reuse the dockerPullSecret parameter to pull such image


# ==========================
# ### System Section ###
# ==========================
# The values below are predefined system settings.
# **Do not modify** these values as they are essential for the internal operation of the system.

system:
  # ==========================
  # Agent Configuration
  # ==========================
  K8sManager:
    ReleaseName: "k8s-connector-release"  # Release name of the agent manager  (used for identification in the cluster)

  # ==========================
  # Batch Resources
  # ==========================
  batch:
    schedule: "0 */6 * * *"  # Cron job cadence: Run every 6 hours (e.g., 0th minute of every 6th hour)
    backoffLimit: 4  # Maximum number of retries before the job is considered failed. After 4 attempts, the job will fail.

  # ==========================
  # Service Account Resources
  # ==========================
  serviceAccount:
    name: konnector-sa  # Service account name to be used by the workloads

  # ==========================
  # Config Map Resources
  # ==========================
  configMap:
    global:
      name: konnector-globals  # Name of the global configuration map

  # ==========================
  # Role Resources
  # ==========================
  roles:
    secret-creator:
      rules:
        - apiGroups: [""]
          resources: ["secrets"]
          verbs: ["create", "patch", "delete"]
    job-manager:
      rules:
        - apiGroups: ["batch"]
          resources: ["jobs"]
          verbs: ["get", "list", "watch", "create", "delete", "patch"]
    crds-resource-manager:
      rules:
        - apiGroups: ["panw.com"]
          resources: ["panrules"]
          verbs: ["list", "create", "patch", "get", "update", "delete", "watch"]

  # ==========================
  # Cluster Role Resources
  # ==========================
  clusterRoles:
    konnector-manager-creator:
      rules:
        - apiGroups: [""]
          resources: ["configmaps", "services", "serviceaccounts"]
          verbs: ["create", "patch", "delete"]
        - apiGroups: ["apps"]
          resources: ["deployments", "daemonsets"]
          verbs: ["create", "patch", "delete"]
        - apiGroups: ["batch"]
          resources: ["cronjobs", "jobs"]
          verbs: ["create", "patch", "delete"]
        - apiGroups: ["rbac.authorization.k8s.io"]
          resources: ["clusterroles", "roles", "rolebindings", "clusterrolebindings"]
          verbs: ["create", "patch", "delete"]
    konnector-cluster-manager:
      rules:
        - apiGroups: [""]
          resources: ["namespaces", "secrets", "configmaps"]
          verbs: ["get", "update", "patch", "list", "watch"]
        - apiGroups: ["coordination.k8s.io"]
          resources: ["leases"]
          verbs: ["get", "update", "patch", "list", "watch"]
        - apiGroups: ["admissionregistration.k8s.io"]
          resources: ["validatingwebhookconfigurations"]
          verbs: ["update", "list", "watch", "get", "create", "patch", "delete"]
    konnector-read-inventory:
      rules:
        - apiGroups: [""]
          resources: ["namespaces", "pods", "serviceaccounts", "endpoints", "services", "configmaps", "secrets", "nodes", "nodes/proxy"]
          verbs: ["get", "list", "watch", "create"]
        - apiGroups: ["apps"]
          resources: ["replicasets", "deployments", "statefulsets", "daemonsets"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["batch"]
          resources: ["jobs", "cronjobs"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["rbac.authorization.k8s.io"]
          resources: ["clusterroles", "roles", "rolebindings", "clusterrolebindings"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["networking.k8s.io"]
          resources: ["networkpolicies", "ingresses"]
          verbs: ["get", "list", "watch"]
    konnector-crd-manager:
      rules:
        - apiGroups: ["apiextensions.k8s.io"]
          resources: ["customresourcedefinitions"]
          verbs: ["create", "get", "patch", "delete"]
    konnector-node-vm-discovery:
      rules:
        - apiGroups: [""]
          resources: ["nodes"]
          verbs: ["get", "list", "patch"]
    konnector-aro-openshift-permissions:
      rules:
        - apiGroups: ["aro.openshift.io"]
          resources: ["clusters"]
          verbs: ["get", "list", "watch"]
    konnector-general-openshift-permissions:
      rules:
        - apiGroups: ["config.openshift.io"]
          resources: ["clusterversions", "apiservers", "authentications", "clusteroperators", "oauths", "infrastructures"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["operator.openshift.io"]
          resources: ["kubeapiservers", "openshiftapiservers", "ingresscontrollers", "networks"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["image.openshift.io"]
          resources: ["images", "imagestreams"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["route.openshift.io"]
          resources: ["routes"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["security.openshift.io"]
          resources: ["securitycontextconstraints"]
          verbs: ["get", "list", "watch"]
    konnector-otel:
      rules:
        - apiGroups: [""]
          resources: ["nodes/stats"]
          verbs: ["get"]
        - apiGroups: [""]
          resources: ["events", "namespaces", "namespaces/status", "nodes", "nodes/spec", "pods", "pods/status", "replicationcontrollers", "replicationcontrollers/status", "resourcequotas", "services"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["apps"]
          resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["batch"]
          resources: ["jobs", "cronjobs"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["autoscaling"]
          resources: ["horizontalpodautoscalers"]
          verbs: ["get", "list", "watch"]
    konnector-bc:
      skipValidation: "true"
      rules:
        - apiGroups: ["extensions"]
          resources: ["daemonsets", "deployments", "replicasets"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["", "coordination.k8s.io"]
          resources: ["leases", "namespaces", "secrets", "configmaps"]
          verbs: ["get", "update", "patch", "list", "watch"]

  extraClusterRoleBindings:
    konnector-openshift-anyuid:
      roleRef:
        apiGroup: security.openshift.io/v1
        name: system:openshift:scc:anyuid
    konnector-openshift-privileged:
      roleRef:
        apiGroup: security.openshift.io/v1
        name: system:openshift:scc:privileged

  # ==========================
  # Secrets Resources
  # ==========================
  secrets:
    backendAuth:
      name: backend-auth-secret  # Secret holding backend authentication credentials (e.g. API tokens)
    dockerSecret:
      name: konnector-docker-secret  # Secret for Docker credentials (e.g., for pulling private images)

  # ==========================
  # Apps Configurations
  # ==========================
  apps:
    tolerations:
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "arm64"
        effect: "NoSchedule"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
