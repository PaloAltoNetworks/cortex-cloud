{{- $ns := .Values.namespace.name }}
{{- $konnectorJobName := printf "%s-job-revision-%d" .Chart.Name .Release.Revision }}
{{- $secret := .Values.system.secrets.distribution.name | default "distribution-id" }}
{{- include "common.validateImage" . }}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $konnectorJobName }} 
  namespace: {{ $ns }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
{{- include "common.jobTemplate" . | nindent 0 }}
---

apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ $ns }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.system.batch.schedule }}
  jobTemplate:
    {{- include "common.jobTemplate" . | nindent 4 }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: delete-{{ .Values.system.K8sManager.ReleaseName }}
  namespace: {{ $ns }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 0
  template:
    spec:
      serviceAccountName: {{ .Values.system.serviceAccount.name }}
      restartPolicy: "Never"
      containers:
        - name: helm-uninstall
          image: alpine/helm:3.17.2
          command: ["/bin/sh", "-c"]
          args:
            - |
                echo -e "\033[34mChecking for {{ .Values.system.K8sManager.ReleaseName }} in namespace {{ .Release.Namespace }}...\033[0m";
                if helm status {{ .Values.system.K8sManager.ReleaseName }} --namespace {{ .Release.Namespace }} >/dev/null 2>&1; then
                  echo -e "\033[33mUninstalling {{ .Values.system.K8sManager.ReleaseName }}...\033[0m";
                  if helm uninstall {{ .Values.system.K8sManager.ReleaseName }} --namespace {{ .Release.Namespace }} --debug; then
                    echo -e "\033[32mSuccessfully uninstalled {{ .Values.system.K8sManager.ReleaseName }}.\033[0m";
                    exit 0
                  else
                    echo -e "\033[31mWe attempted to uninstall all related components, but an internal cleanup step failed. \nAs a result, some resources may not have been fully removed. \nTo complete the uninstallation manually, please run the following command: \n helm uninstall {{ .Values.system.K8sManager.ReleaseName }} {{ .Release.Name }} --namespace {{ .Release.Namespace }}\033[0m";
                    exit 1
                  fi
                else
                  echo -e "\033[33m{{ .Values.system.K8sManager.ReleaseName }} not found, skipping uninstall.\033[0m";
                  exit 0
                fi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: delete-{{ .Values.system.secrets.distribution.name }}-secret
  namespace: {{ $ns }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  ttlSecondsAfterFinished: 60
  backoffLimit: 0
  template:
    spec:
      serviceAccountName: {{ .Values.system.serviceAccount.name }}
      restartPolicy: "Never"
      containers:
        - name: kubectl
          image: bitnami/kubectl:1.30
          command: ["sh","-c"]
          args:
            - |
              set -euo pipefail
              kubectl -n {{ $ns }} get job "{{ $konnectorJobName }}" >/dev/null 2>&1 \
                && kubectl -n {{ $ns }} wait --for=condition=complete --timeout=2m "job/{{ $konnectorJobName }}" \
                || echo "Job {{ $konnectorJobName }} not found; continuing."
              kubectl -n {{ $ns }} delete secret "{{ $secret }}" --ignore-not-found=true
