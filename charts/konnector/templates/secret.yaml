{{- $ns := $.Values.namespace.name -}}
{{- $name := $.Values.system.secrets.backendAuth.name -}}
{{- $existing := lookup "v1" "Secret" $ns $name -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  namespace: {{ $ns }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
type: Opaque
data:
  {{- range $k := list "token" "refreshToken" "sosToken" "chapi" }}
  {{ $k }}: {{ include "secret.valueOrExistingB64" (dict "existing" $existing "key" $k "seed" "--set-by-konnnector-at-runtime--") }}
  {{- end }}
---
apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: {{ .Values.system.secrets.dockerSecret.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
data:
  .dockerconfigjson: {{ .Values.dockerPullSecret | default ( "{}" | b64enc ) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: distribution-id
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
type: Opaque
stringData:
  distribution-id: {{ .Values.distribution.id | required "The distribution.id value is required!" | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: konnector-proxy
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
type: Opaque
stringData:
  httpProxy: {{ .Values.proxyValues.httpProxy | default "" | quote }}
  noProxy: {{ .Values.proxyValues.noProxy | default "" | quote }}